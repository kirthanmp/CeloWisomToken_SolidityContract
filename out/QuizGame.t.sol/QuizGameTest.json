{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "game",
      "outputs": [
        {
          "internalType": "contract QuizGame",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testQuizFail",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testQuizPass",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "198:1040:23:-:0;;;1572:26:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;198:1040:23;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "198:1040:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;322:450;;;;;;;;;;;;;:::i;941:224::-;;;;;;;;;;;;;:::i;1819:584:0:-;;;;;;;;;;;;;:::i;:::-;;;179:14:24;;172:22;154:41;;142:2;127:18;1819:584:0;;;;;;;;236:20:23;;;;;;;;;;-1:-1:-1;236:20:23;;;;;;;-1:-1:-1;;;;;236:20:23;;;;;;-1:-1:-1;;;;;396:32:24;;;378:51;;366:2;351:18;236:20:23;206:229:24;778:157:23;;;;;;;;;;;;;:::i;1572:26:0:-;;;;;;;;;;-1:-1:-1;1572:26:0;;;;;;;;322:450:23;385:34;:96;;;;;;;;;;;;;;;;;;;491:20;:27;;;;;;;;;;;;;-1:-1:-1;;;491:27:23;;;;;528:12;-1:-1:-1;;;528:35:23;;573:20;623:4;629:6;606:30;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;606:30:23;;;;;;;;;;596:41;;606:30;596:41;;;;1207:25:24;;;596:41:23;-1:-1:-1;652:25:23;;1180:18:24;652:25:23;;;;;;;707:8;717:12;694:36;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;687:4;;:43;;;;;-1:-1:-1;;;;;687:43:23;;;;;-1:-1:-1;;;;;687:43:23;;;;;;745:20;749:4;;;;;;;;;-1:-1:-1;;;;;749:4:23;-1:-1:-1;;;;;749:13:23;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;749:15:23;;;;;;;;;;;;:::i;:::-;745:20;;;;;;:::i;:::-;;;;;;;;346:426;;;;322:450::o;941:224::-;982:20;1056:4;1036:33;;-1:-1:-1;;;1036:33:23;;1056:4;;;;-1:-1:-1;;;;;1056:4:23;1036:33;;;3260:51:24;1063:5:23;3327:18:24;;;3320:34;1005:21:23;;1671:64:0;;1036:11:23;;3233:18:24;;1036:33:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1079:4:23;;:16;;-1:-1:-1;;;1079:16:23;;3567:2:24;1079:16:23;;;3549:21:24;3606:1;3586:18;;;3579:29;-1:-1:-1;;;3624:18:24;;;3617:32;1079:4:23;;;;-1:-1:-1;;;;;1079:4:23;;-1:-1:-1;1079:10:23;;-1:-1:-1;3666:18:24;;1079:16:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1105:53;1114:21;1137:12;1152:5;1137:20;;;;:::i;:::-;1105:8;:53::i;:::-;972:193;941:224::o;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;3260:51:24;;;-1:-1:-1;;;3327:18:24;;;3320:34;2196:43:0;;;;;;;;;3233:18:24;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;778:157:23:-;823:4;;:15;;-1:-1:-1;;;823:15:23;;5366:2:24;823:15:23;;;5348:21:24;5405:1;5385:18;;;5378:29;-1:-1:-1;;;5423:18:24;;;5416:31;823:4:23;;;;-1:-1:-1;;;;;823:4:23;;:10;;5464:18:24;;823:15:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;819:110;;902:16;913:4;902:10;:16::i;:::-;778:157::o;819:110::-;853:17;864:5;853:10;:17::i;5209:262:0:-;5271:1;5266;:6;5262:203;;5293:41;;;;;5695:2:24;5677:21;;;5734:2;5714:18;;;5707:30;5773:34;5768:2;5753:18;;5746:62;-1:-1:-1;;;5839:2:24;5824:18;;5817:32;5881:3;5866:19;;5493:398;5293:41:0;;;;;;;;5353:31;;;6108:21:24;;;6165:2;6145:18;;;6138:30;-1:-1:-1;;;6199:2:24;6184:18;;6177:40;6284:4;6269:20;;6262:36;;;5353:31:0;;;;;;;6249:3:24;5353:31:0;;;5403;;;6521:21:24;;;6578:2;6558:18;;;6551:30;-1:-1:-1;;;6612:2:24;6597:18;;6590:40;6697:4;6682:20;;6675:36;;;5403:31:0;;;;;;;6662:3:24;5403:31:0;;;5448:6;:4;:6::i;:::-;5209:262;;:::o;3262:157::-;3322:9;3317:96;;3352:30;;;;;6924:2:24;6906:21;;;6963:2;6943:18;;;6936:30;7002:25;6997:2;6982:18;;6975:53;7060:2;7045:18;;6722:347;3352:30:0;;;;;;;;3396:6;2409:432;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;7276:51:24;;;-1:-1:-1;;;7343:18:24;;;7336:34;;;;2712:4:0;7386:18:24;;;7379:34;2489:11:0;;1671:64;2586:43;;7249:18:24;;2652:67:0;;;-1:-1:-1;;2652:67:0;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:0;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:0;2820:7;:14;;-1:-1:-1;;2820:14:0;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;440:250:24:-;525:1;535:113;549:6;546:1;543:13;535:113;;;625:11;;;619:18;606:11;;;599:39;571:2;564:10;535:113;;;-1:-1:-1;;682:1:24;664:16;;657:27;440:250::o;695:361::-;884:6;879:3;872:19;854:3;920:6;914:13;936:73;1002:6;997:2;992:3;988:12;983:2;975:6;971:15;936:73;:::i;:::-;1029:16;;;;1047:2;1025:25;;695:361;-1:-1:-1;;;695:361:24:o;1243:271::-;1285:3;1323:5;1317:12;1350:6;1345:3;1338:19;1366:76;1435:6;1428:4;1423:3;1419:14;1412:4;1405:5;1401:16;1366:76;:::i;:::-;1496:2;1475:15;-1:-1:-1;;1471:29:24;1462:39;;;;1503:4;1458:50;;1243:271;-1:-1:-1;;1243:271:24:o;1519:291::-;1696:2;1685:9;1678:21;1659:4;1716:45;1757:2;1746:9;1742:18;1734:6;1716:45;:::i;:::-;1708:53;;1797:6;1792:2;1781:9;1777:18;1770:34;1519:291;;;;;:::o;1815:127::-;1876:10;1871:3;1867:20;1864:1;1857:31;1907:4;1904:1;1897:15;1931:4;1928:1;1921:15;1947:897;2027:6;2080:2;2068:9;2059:7;2055:23;2051:32;2048:52;;;2096:1;2093;2086:12;2048:52;2129:9;2123:16;2158:18;2199:2;2191:6;2188:14;2185:34;;;2215:1;2212;2205:12;2185:34;2253:6;2242:9;2238:22;2228:32;;2298:7;2291:4;2287:2;2283:13;2279:27;2269:55;;2320:1;2317;2310:12;2269:55;2349:2;2343:9;2371:2;2367;2364:10;2361:36;;;2377:18;;:::i;:::-;2452:2;2446:9;2420:2;2506:13;;-1:-1:-1;;2502:22:24;;;2526:2;2498:31;2494:40;2482:53;;;2550:18;;;2570:22;;;2547:46;2544:72;;;2596:18;;:::i;:::-;2636:10;2632:2;2625:22;2671:2;2663:6;2656:18;2711:7;2706:2;2701;2697;2693:11;2689:20;2686:33;2683:53;;;2732:1;2729;2722:12;2683:53;2745:68;2810:2;2805;2797:6;2793:15;2788:2;2784;2780:11;2745:68;:::i;:::-;2832:6;1947:897;-1:-1:-1;;;;;;;1947:897:24:o;2849:220::-;2998:2;2987:9;2980:21;2961:4;3018:45;3059:2;3048:9;3044:18;3036:6;3018:45;:::i;:::-;3010:53;2849:220;-1:-1:-1;;;2849:220:24:o;3695:222::-;3760:9;;;3781:10;;;3778:133;;;3833:10;3828:3;3824:20;3821:1;3814:31;3868:4;3865:1;3858:15;3896:4;3893:1;3886:15;3778:133;3695:222;;;;:::o;4201:384::-;-1:-1:-1;;;;;;4386:33:24;;4374:46;;4443:13;;4356:3;;4465:74;4443:13;4528:1;4519:11;;4512:4;4500:17;;4465:74;:::i;:::-;4559:16;;;;4577:1;4555:24;;4201:384;-1:-1:-1;;;4201:384:24:o;4590:287::-;4719:3;4757:6;4751:13;4773:66;4832:6;4827:3;4820:4;4812:6;4808:17;4773:66;:::i;:::-;4855:16;;;;;4590:287;-1:-1:-1;;4590:287:24:o;4882:277::-;4949:6;5002:2;4990:9;4981:7;4977:23;4973:32;4970:52;;;5018:1;5015;5008:12;4970:52;5050:9;5044:16;5103:5;5096:13;5089:21;5082:5;5079:32;5069:60;;5125:1;5122;5115:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "game()": "c3fe3e28",
    "setUp()": "0a9254e4",
    "testQuizFail()": "ebafe754",
    "testQuizPass()": "370ab9b0"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"game\",\"outputs\":[{\"internalType\":\"contract QuizGame\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testQuizFail\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testQuizPass\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/QuizGame.t.sol\":\"QuizGameTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1419991b2a8eb2de79b9bd2b3c5a0ceb5d7636ab9bcddde0b71701fd6ad47273\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7afc962ec6e60e1ff749cd0d4c671bc3b85386c68d26b824d4a6c6e6e8255e85\",\"dweb:/ipfs/QmWwfj6Qk8QBcnGD45seGnDXtUmC9CYKuPNJCApSjLyPSj\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d\",\"dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e\",\"dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32\",\"dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x502b18a4becda6ecd91fa8b419d8034946bfa80e6cc7f6497f51f8565bfadae0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf499ee483a1dfd02023d4ce78ed4029a49794ccd5b849aaab912faea0d2ba61\",\"dweb:/ipfs/QmP6hwNZW7sYbQK9fBzuZWxfLm6Swx2nKzvZ54qWNqQkzX\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x7c6be780decc2c54d0c65990b2f0a66d6d25778a3840a55977344290ef544fce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae80141e1208d1c5a7c3417d79a09aa510c5b6ecaaa08884ca45e42583daed90\",\"dweb:/ipfs/Qmc6MwPwwDC242vwEJWyGhwUbKLKc7ab9hUau2JCmuHrTT\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xd8703f49411737ecf8d411f8fa66b2bf0ef972ba28b7a4adf1748c63df1bf682\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7c10a6b8112f6fe3cdccb6240ecd382765216b1a82e9a86a0fec8f5e09eadd1\",\"dweb:/ipfs/QmdRvPCU4RkjMHsTu3Ric1ZEF1AWDNLp78unFC5aWP17xq\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xa24468244abb66e663fb7eee6463cb518eb9a7c14e1071548ff564cca825bbca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://145585a2194aa6e2d30edfe709ef2814e20b1b4540469aa6a8f50c841fcb9070\",\"dweb:/ipfs/QmZrwbvtpbtTxqbW5phUrwb3F1tBiPSQc6jZJAXBfsBsAh\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/forge-std/src/test.sol\":{\"keccak256\":\"0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765\",\"dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri\"]},\"src/QuizGame.sol\":{\"keccak256\":\"0xb656ff46e51705b4d26bd803d6c6c5f1d30ebbfb14fd39de39ed8c266a9bfea7\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://aa2ba5e8b2eb2bf4298214e3594b0f080e6db7adb4b669d1ccc25bd88fd4befb\",\"dweb:/ipfs/QmdHdEsqy9FCAZeFMvLsr3RPfFUHfq5jBs8JkKbHfeLJ5E\"]},\"test/QuizGame.t.sol\":{\"keccak256\":\"0x5a409b233d637bd3d4b58095f863865c891fdbd495c37d020da9354182d76255\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4409a3b57d1c5413cedb0cd041c5752fc8f12e4617260843e88fc0ce27f20431\",\"dweb:/ipfs/Qmd6YiMLGAo2phBjMbBTLAL6Pe1Snyp8Fk5DVhtuntiYgZ\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.23+commit.f704f362"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "game",
          "outputs": [
            {
              "internalType": "contract QuizGame",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testQuizFail"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testQuizPass"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/QuizGame.t.sol": "QuizGameTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x1419991b2a8eb2de79b9bd2b3c5a0ceb5d7636ab9bcddde0b71701fd6ad47273",
        "urls": [
          "bzz-raw://7afc962ec6e60e1ff749cd0d4c671bc3b85386c68d26b824d4a6c6e6e8255e85",
          "dweb:/ipfs/QmWwfj6Qk8QBcnGD45seGnDXtUmC9CYKuPNJCApSjLyPSj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7",
        "urls": [
          "bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2",
          "dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6",
        "urls": [
          "bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d",
          "dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d",
        "urls": [
          "bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e",
          "dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811",
        "urls": [
          "bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32",
          "dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x502b18a4becda6ecd91fa8b419d8034946bfa80e6cc7f6497f51f8565bfadae0",
        "urls": [
          "bzz-raw://bf499ee483a1dfd02023d4ce78ed4029a49794ccd5b849aaab912faea0d2ba61",
          "dweb:/ipfs/QmP6hwNZW7sYbQK9fBzuZWxfLm6Swx2nKzvZ54qWNqQkzX"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x7c6be780decc2c54d0c65990b2f0a66d6d25778a3840a55977344290ef544fce",
        "urls": [
          "bzz-raw://ae80141e1208d1c5a7c3417d79a09aa510c5b6ecaaa08884ca45e42583daed90",
          "dweb:/ipfs/Qmc6MwPwwDC242vwEJWyGhwUbKLKc7ab9hUau2JCmuHrTT"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/mocks/MockERC20.sol": {
        "keccak256": "0xd8703f49411737ecf8d411f8fa66b2bf0ef972ba28b7a4adf1748c63df1bf682",
        "urls": [
          "bzz-raw://b7c10a6b8112f6fe3cdccb6240ecd382765216b1a82e9a86a0fec8f5e09eadd1",
          "dweb:/ipfs/QmdRvPCU4RkjMHsTu3Ric1ZEF1AWDNLp78unFC5aWP17xq"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/mocks/MockERC721.sol": {
        "keccak256": "0xa24468244abb66e663fb7eee6463cb518eb9a7c14e1071548ff564cca825bbca",
        "urls": [
          "bzz-raw://145585a2194aa6e2d30edfe709ef2814e20b1b4540469aa6a8f50c841fcb9070",
          "dweb:/ipfs/QmZrwbvtpbtTxqbW5phUrwb3F1tBiPSQc6jZJAXBfsBsAh"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/test.sol": {
        "keccak256": "0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0",
        "urls": [
          "bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765",
          "dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri"
        ],
        "license": "MIT"
      },
      "src/QuizGame.sol": {
        "keccak256": "0xb656ff46e51705b4d26bd803d6c6c5f1d30ebbfb14fd39de39ed8c266a9bfea7",
        "urls": [
          "bzz-raw://aa2ba5e8b2eb2bf4298214e3594b0f080e6db7adb4b669d1ccc25bd88fd4befb",
          "dweb:/ipfs/QmdHdEsqy9FCAZeFMvLsr3RPfFUHfq5jBs8JkKbHfeLJ5E"
        ],
        "license": "UNLICENSED"
      },
      "test/QuizGame.t.sol": {
        "keccak256": "0x5a409b233d637bd3d4b58095f863865c891fdbd495c37d020da9354182d76255",
        "urls": [
          "bzz-raw://4409a3b57d1c5413cedb0cd041c5752fc8f12e4617260843e88fc0ce27f20431",
          "dweb:/ipfs/Qmd6YiMLGAo2phBjMbBTLAL6Pe1Snyp8Fk5DVhtuntiYgZ"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/QuizGame.t.sol",
    "id": 45009,
    "exportedSymbols": {
      "CheatCodes": [
        44880
      ],
      "DSTest": [
        2291
      ],
      "QuizGame": [
        44727
      ],
      "QuizGameTest": [
        45008
      ],
      "StdAssertions": [
        3784
      ],
      "StdChains": [
        4548
      ],
      "StdCheats": [
        7401
      ],
      "StdInvariant": [
        7726
      ],
      "StdStorage": [
        8492
      ],
      "StdStyle": [
        11342
      ],
      "StdUtils": [
        12128
      ],
      "Test": [
        44559
      ],
      "TestBase": [
        2357
      ],
      "Vm": [
        13979
      ],
      "console": [
        22043
      ],
      "console2": [
        30168
      ],
      "safeconsole": [
        44508
      ],
      "stdError": [
        7467
      ],
      "stdJson": [
        8318
      ],
      "stdMath": [
        8460
      ],
      "stdStorage": [
        10131
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1200:23",
    "nodes": [
      {
        "id": 44870,
        "nodeType": "PragmaDirective",
        "src": "39:24:23",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 44871,
        "nodeType": "ImportDirective",
        "src": "65:28:23",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/test.sol",
        "file": "forge-std/test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45009,
        "sourceUnit": 44560,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44872,
        "nodeType": "ImportDirective",
        "src": "95:29:23",
        "nodes": [],
        "absolutePath": "src/QuizGame.sol",
        "file": "../src/QuizGame.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45009,
        "sourceUnit": 44728,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44880,
        "nodeType": "ContractDefinition",
        "src": "126:70:23",
        "nodes": [
          {
            "id": 44879,
            "nodeType": "FunctionDefinition",
            "src": "153:41:23",
            "nodes": [],
            "functionSelector": "c88a5e6d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deal",
            "nameLocation": "162:4:23",
            "parameters": {
              "id": 44877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44874,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44879,
                  "src": "167:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44873,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "167:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44876,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44879,
                  "src": "176:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44875,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "176:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "166:18:23"
            },
            "returnParameters": {
              "id": 44878,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "193:0:23"
            },
            "scope": 44880,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "CheatCodes",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          44880
        ],
        "name": "CheatCodes",
        "nameLocation": "136:10:23",
        "scope": 45009,
        "usedErrors": [],
        "usedEvents": []
      },
      {
        "id": 45008,
        "nodeType": "ContractDefinition",
        "src": "198:1040:23",
        "nodes": [
          {
            "id": 44885,
            "nodeType": "VariableDeclaration",
            "src": "236:20:23",
            "nodes": [],
            "constant": false,
            "functionSelector": "c3fe3e28",
            "mutability": "mutable",
            "name": "game",
            "nameLocation": "252:4:23",
            "scope": 45008,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_QuizGame_$44727",
              "typeString": "contract QuizGame"
            },
            "typeName": {
              "id": 44884,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44883,
                "name": "QuizGame",
                "nameLocations": [
                  "236:8:23"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44727,
                "src": "236:8:23"
              },
              "referencedDeclaration": 44727,
              "src": "236:8:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_QuizGame_$44727",
                "typeString": "contract QuizGame"
              }
            },
            "visibility": "public"
          },
          {
            "id": 44891,
            "nodeType": "VariableDeclaration",
            "src": "262:53:23",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "cheats",
            "nameLocation": "282:6:23",
            "scope": 45008,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CheatCodes_$44880",
              "typeString": "contract CheatCodes"
            },
            "typeName": {
              "id": 44887,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44886,
                "name": "CheatCodes",
                "nameLocations": [
                  "262:10:23"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44880,
                "src": "262:10:23"
              },
              "referencedDeclaration": 44880,
              "src": "262:10:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CheatCodes_$44880",
                "typeString": "contract CheatCodes"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 44889,
                  "name": "HEVM_ADDRESS",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 107,
                  "src": "302:12:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 44888,
                "name": "CheatCodes",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 44880,
                "src": "291:10:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_CheatCodes_$44880_$",
                  "typeString": "type(contract CheatCodes)"
                }
              },
              "id": 44890,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "291:24:23",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CheatCodes_$44880",
                "typeString": "contract CheatCodes"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44939,
            "nodeType": "FunctionDefinition",
            "src": "322:450:23",
            "nodes": [],
            "body": {
              "id": 44938,
              "nodeType": "Block",
              "src": "346:426:23",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    44895
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44895,
                      "mutability": "mutable",
                      "name": "question",
                      "nameLocation": "411:8:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 44938,
                      "src": "385:34:23",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 44894,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "385:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44897,
                  "initialValue": {
                    "hexValue": "576861742069732074686520616e7377657220746f206c6966652c2074686520756e6976657273652c20616e642065766572797468696e673f",
                    "id": 44896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "422:59:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e2267ccdd4a0fe6eb8de02e9c20f9cc8524fc03882f49376261fc942701f994a",
                      "typeString": "literal_string \"What is the answer to life, the universe, and everything?\""
                    },
                    "value": "What is the answer to life, the universe, and everything?"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "385:96:23"
                },
                {
                  "assignments": [
                    44899
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44899,
                      "mutability": "mutable",
                      "name": "answer",
                      "nameLocation": "505:6:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 44938,
                      "src": "491:20:23",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 44898,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "491:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44901,
                  "initialValue": {
                    "hexValue": "3432",
                    "id": 44900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "514:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ccb1f717aa77602faf03a594761a36956b1c4cf44c6b336d1db57da799b331b8",
                      "typeString": "literal_string \"42\""
                    },
                    "value": "42"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "491:27:23"
                },
                {
                  "assignments": [
                    44903
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44903,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "536:4:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 44938,
                      "src": "528:12:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 44902,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "528:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44908,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "313233313233313233",
                        "id": 44906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "551:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_250f78769f22a8c43a2b767fde4b093fbbcdc28bd7ecac4bad883a4b0fcf30e3",
                          "typeString": "literal_string \"123123123\""
                        },
                        "value": "123123123"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_250f78769f22a8c43a2b767fde4b093fbbcdc28bd7ecac4bad883a4b0fcf30e3",
                          "typeString": "literal_string \"123123123\""
                        }
                      ],
                      "id": 44905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "543:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 44904,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "543:7:23",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 44907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "543:20:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "528:35:23"
                },
                {
                  "assignments": [
                    44910
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44910,
                      "mutability": "mutable",
                      "name": "hashedAnswer",
                      "nameLocation": "581:12:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 44938,
                      "src": "573:20:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 44909,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "573:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44918,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44914,
                            "name": "salt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44903,
                            "src": "623:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 44915,
                            "name": "answer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44899,
                            "src": "629:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 44912,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "606:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 44913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "610:12:23",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "606:16:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 44916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "606:30:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 44911,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "596:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 44917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "596:41:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "573:64:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 44920,
                        "name": "hashedAnswer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44910,
                        "src": "664:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 44919,
                      "name": "log_bytes32",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "652:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 44921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "652:25:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44922,
                  "nodeType": "EmitStatement",
                  "src": "647:30:23"
                },
                {
                  "expression": {
                    "id": 44930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44923,
                      "name": "game",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44885,
                      "src": "687:4:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuizGame_$44727",
                        "typeString": "contract QuizGame"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 44927,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44895,
                          "src": "707:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 44928,
                          "name": "hashedAnswer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44910,
                          "src": "717:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 44926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "694:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_bytes32_$returns$_t_contract$_QuizGame_$44727_$",
                          "typeString": "function (string memory,bytes32) returns (contract QuizGame)"
                        },
                        "typeName": {
                          "id": 44925,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 44924,
                            "name": "QuizGame",
                            "nameLocations": [
                              "698:8:23"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 44727,
                            "src": "698:8:23"
                          },
                          "referencedDeclaration": 44727,
                          "src": "698:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuizGame_$44727",
                            "typeString": "contract QuizGame"
                          }
                        }
                      },
                      "id": 44929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "694:36:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuizGame_$44727",
                        "typeString": "contract QuizGame"
                      }
                    },
                    "src": "687:43:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_QuizGame_$44727",
                      "typeString": "contract QuizGame"
                    }
                  },
                  "id": 44931,
                  "nodeType": "ExpressionStatement",
                  "src": "687:43:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 44933,
                            "name": "game",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44885,
                            "src": "749:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_QuizGame_$44727",
                              "typeString": "contract QuizGame"
                            }
                          },
                          "id": 44934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "754:8:23",
                          "memberName": "question",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44626,
                          "src": "749:13:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 44935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "749:15:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 44932,
                      "name": "log",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "745:3:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 44936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "745:20:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44937,
                  "nodeType": "EmitStatement",
                  "src": "740:25:23"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "331:5:23",
            "parameters": {
              "id": 44892,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "336:2:23"
            },
            "returnParameters": {
              "id": 44893,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "346:0:23"
            },
            "scope": 45008,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44960,
            "nodeType": "FunctionDefinition",
            "src": "778:157:23",
            "nodes": [],
            "body": {
              "id": 44959,
              "nodeType": "Block",
              "src": "809:126:23",
              "nodes": [],
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 44950,
                        "nodeType": "Block",
                        "src": "839:42:23",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "66616c7365",
                                  "id": 44947,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "864:5:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                ],
                                "id": 44946,
                                "name": "assertTrue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  269,
                                  290
                                ],
                                "referencedDeclaration": 269,
                                "src": "853:10:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                                  "typeString": "function (bool)"
                                }
                              },
                              "id": 44948,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "853:17:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 44949,
                            "nodeType": "ExpressionStatement",
                            "src": "853:17:23"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 44951,
                      "nodeType": "TryCatchClause",
                      "src": "839:42:23"
                    },
                    {
                      "block": {
                        "id": 44956,
                        "nodeType": "Block",
                        "src": "888:41:23",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "74727565",
                                  "id": 44953,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "913:4:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                ],
                                "id": 44952,
                                "name": "assertTrue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  269,
                                  290
                                ],
                                "referencedDeclaration": 269,
                                "src": "902:10:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                                  "typeString": "function (bool)"
                                }
                              },
                              "id": 44954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "902:16:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 44955,
                            "nodeType": "ExpressionStatement",
                            "src": "902:16:23"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 44957,
                      "nodeType": "TryCatchClause",
                      "src": "882:47:23"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 44944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "834:3:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                          "typeString": "literal_string \"1\""
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                          "typeString": "literal_string \"1\""
                        }
                      ],
                      "expression": {
                        "id": 44942,
                        "name": "game",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44885,
                        "src": "823:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_QuizGame_$44727",
                          "typeString": "contract QuizGame"
                        }
                      },
                      "id": 44943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "828:5:23",
                      "memberName": "guess",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44702,
                      "src": "823:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) external"
                      }
                    },
                    "id": 44945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "823:15:23",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44958,
                  "nodeType": "TryStatement",
                  "src": "819:110:23"
                }
              ]
            },
            "functionSelector": "ebafe754",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testQuizFail",
            "nameLocation": "787:12:23",
            "parameters": {
              "id": 44940,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "799:2:23"
            },
            "returnParameters": {
              "id": 44941,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "809:0:23"
            },
            "scope": 45008,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44999,
            "nodeType": "FunctionDefinition",
            "src": "941:224:23",
            "nodes": [],
            "body": {
              "id": 44998,
              "nodeType": "Block",
              "src": "972:193:23",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    44964
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44964,
                      "mutability": "mutable",
                      "name": "beginBalance",
                      "nameLocation": "990:12:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 44998,
                      "src": "982:20:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44963,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "982:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44970,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 44967,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "1013:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuizGameTest_$45008",
                            "typeString": "contract QuizGameTest"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_QuizGameTest_$45008",
                            "typeString": "contract QuizGameTest"
                          }
                        ],
                        "id": 44966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1005:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 44965,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1005:7:23",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 44968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1005:13:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 44969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1019:7:23",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "1005:21:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "982:44:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44976,
                            "name": "game",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44885,
                            "src": "1056:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_QuizGame_$44727",
                              "typeString": "contract QuizGame"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_QuizGame_$44727",
                              "typeString": "contract QuizGame"
                            }
                          ],
                          "id": 44975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1048:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44974,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1048:7:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1048:13:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130303030",
                        "id": 44978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1063:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        }
                      ],
                      "expression": {
                        "id": 44971,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44891,
                        "src": "1036:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$44880",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 44973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1043:4:23",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44879,
                      "src": "1036:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 44979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1036:33:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44980,
                  "nodeType": "ExpressionStatement",
                  "src": "1036:33:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3432",
                        "id": 44984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1090:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ccb1f717aa77602faf03a594761a36956b1c4cf44c6b336d1db57da799b331b8",
                          "typeString": "literal_string \"42\""
                        },
                        "value": "42"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ccb1f717aa77602faf03a594761a36956b1c4cf44c6b336d1db57da799b331b8",
                          "typeString": "literal_string \"42\""
                        }
                      ],
                      "expression": {
                        "id": 44981,
                        "name": "game",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44885,
                        "src": "1079:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_QuizGame_$44727",
                          "typeString": "contract QuizGame"
                        }
                      },
                      "id": 44983,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1084:5:23",
                      "memberName": "guess",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44702,
                      "src": "1079:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) external"
                      }
                    },
                    "id": 44985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1079:16:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44986,
                  "nodeType": "ExpressionStatement",
                  "src": "1079:16:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 44990,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1122:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_QuizGameTest_$45008",
                                "typeString": "contract QuizGameTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_QuizGameTest_$45008",
                                "typeString": "contract QuizGameTest"
                              }
                            ],
                            "id": 44989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1114:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 44988,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1114:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 44991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1114:13:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 44992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1128:7:23",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "1114:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 44995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 44993,
                          "name": "beginBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44964,
                          "src": "1137:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3130303030",
                          "id": 44994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1152:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "src": "1137:20:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 44987,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "1105:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1105:53:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44997,
                  "nodeType": "ExpressionStatement",
                  "src": "1105:53:23"
                }
              ]
            },
            "functionSelector": "370ab9b0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testQuizPass",
            "nameLocation": "950:12:23",
            "parameters": {
              "id": 44961,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "962:2:23"
            },
            "returnParameters": {
              "id": 44962,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "972:0:23"
            },
            "scope": 45008,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45003,
            "nodeType": "FunctionDefinition",
            "src": "1171:30:23",
            "nodes": [],
            "body": {
              "id": 45002,
              "nodeType": "Block",
              "src": "1199:2:23",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 45000,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1179:2:23"
            },
            "returnParameters": {
              "id": 45001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1199:0:23"
            },
            "scope": 45008,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 45007,
            "nodeType": "FunctionDefinition",
            "src": "1207:29:23",
            "nodes": [],
            "body": {
              "id": 45006,
              "nodeType": "Block",
              "src": "1234:2:23",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 45004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1214:2:23"
            },
            "returnParameters": {
              "id": 45005,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1234:0:23"
            },
            "scope": 45008,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 44881,
              "name": "DSTest",
              "nameLocations": [
                "223:6:23"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2291,
              "src": "223:6:23"
            },
            "id": 44882,
            "nodeType": "InheritanceSpecifier",
            "src": "223:6:23"
          }
        ],
        "canonicalName": "QuizGameTest",
        "contractDependencies": [
          44727
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          45008,
          2291
        ],
        "name": "QuizGameTest",
        "nameLocation": "207:12:23",
        "scope": 45009,
        "usedErrors": [],
        "usedEvents": [
          5,
          9,
          13,
          17,
          21,
          25,
          29,
          33,
          39,
          45,
          53,
          61,
          67,
          73,
          79,
          85
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 23
}