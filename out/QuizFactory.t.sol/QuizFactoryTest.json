{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "contract QuizFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCountQuizzes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCreateQuiz",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805460ff1916600117905534801561001d57600080fd5b5061172a8061002d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630a9254e4146100675780631a627e0c1461007157806398d9b0d214610079578063ba414fa614610081578063c45a01551461009e578063fa7626d4146100cf575b600080fd5b61006f6100dc565b005b61006f61012d565b61006f610348565b61008961051e565b60405190151581526020015b60405180910390f35b6000546100b7906201000090046001600160a01b031681565b6040516001600160a01b039091168152602001610095565b6000546100899060ff1681565b6040516100e89061092a565b604051809103906000f080158015610104573d6000803e3d6000fd5b50600060026101000a8154816001600160a01b0302191690836001600160a01b03160217905550565b60006040518060600160405280603981526020016116bc6039913990506000604051806040016040528060028152602001611a1960f11b815250905060006831323331323331323360b81b90506000818360405160200161018f92919061095b565b60408051808303601f19018152908290528051602090910120600054631f9314b360e31b83529092506201000090046001600160a01b03169063fc98a598906101de9087908590600401610981565b600060405180830381600087803b1580156101f857600080fd5b505af115801561020c573d6000803e3d6000fd5b5050600080546040516344204d7d60e11b8152600481018390529193506201000090046001600160a01b031691506388409afa90602401602060405180830381865afa158015610260573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028491906109d3565b9050610341816001600160a01b0316633fad9ae06040518163ffffffff1660e01b8152600401600060405180830381865afa1580156102c7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102ef9190810190610a3c565b6040516020016102ff9190610ad0565b60405160208183030381529060405280519060200120866040516020016103269190610ad0565b60405160208183030381529060405280519060200120610649565b5050505050565b60006040518060600160405280603981526020016116bc6039913990506000604051806040016040528060028152602001611a1960f11b815250905060006831323331323331323360b81b9050600081836040516020016103aa92919061095b565b60408051808303601f19018152908290528051602090910120600054631f9314b360e31b83529092506201000090046001600160a01b03169063fc98a598906103f99087908590600401610981565b600060405180830381600087803b15801561041357600080fd5b505af1158015610427573d6000803e3d6000fd5b5050600054604051631f9314b360e31b8152620100009091046001600160a01b0316925063fc98a59891506104629087908590600401610981565b600060405180830381600087803b15801561047c57600080fd5b505af1158015610490573d6000803e3d6000fd5b5050505060008060029054906101000a90046001600160a01b03166001600160a01b0316635ecd45b96040518163ffffffff1660e01b8152600401600060405180830381865afa1580156104e8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105109190810190610aec565b90506103418151600261073f565b60008054610100900460ff161561053e5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156106445760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916105cc917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610b99565b60408051601f19818403018152908290526105e691610ad0565b6000604051808303816000865af19150503d8060008114610623576040519150601f19603f3d011682016040523d82523d6000602084013e610628565b606091505b50915050808060200190518101906106409190610bca565b9150505b919050565b80821461073b577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516106bd9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a17fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f99826040516106f49190610bec565b60405180910390a17fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f998160405161072b9190610c24565b60405180910390a161073b61081e565b5050565b80821461073b577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516107b09060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8826040516107e79190610bec565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405161072b9190610c24565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156109195760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526108b89291602001610b99565b60408051601f19818403018152908290526108d291610ad0565b6000604051808303816000865af19150503d806000811461090f576040519150601f19603f3d011682016040523d82523d6000602084013e610914565b606091505b505050505b6000805461ff001916610100179055565b610a6d80610c4f83390190565b60005b8381101561095257818101518382015260200161093a565b50506000910152565b82815260008251610973816020850160208701610937565b919091016020019392505050565b60408152600083518060408401526109a0816060850160208801610937565b602083019390935250601f91909101601f191601606001919050565b80516001600160a01b038116811461064457600080fd5b6000602082840312156109e557600080fd5b6109ee826109bc565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610a3457610a346109f5565b604052919050565b600060208284031215610a4e57600080fd5b815167ffffffffffffffff80821115610a6657600080fd5b818401915084601f830112610a7a57600080fd5b815181811115610a8c57610a8c6109f5565b610a9f601f8201601f1916602001610a0b565b9150808252856020828501011115610ab657600080fd5b610ac7816020840160208601610937565b50949350505050565b60008251610ae2818460208701610937565b9190910192915050565b60006020808385031215610aff57600080fd5b825167ffffffffffffffff80821115610b1757600080fd5b818501915085601f830112610b2b57600080fd5b815181811115610b3d57610b3d6109f5565b8060051b9150610b4e848301610a0b565b8181529183018401918481019088841115610b6857600080fd5b938501935b83851015610b8d57610b7e856109bc565b82529385019390850190610b6d565b98975050505050505050565b6001600160e01b0319831681528151600090610bbc816004850160208701610937565b919091016004019392505050565b600060208284031215610bdc57600080fd5b815180151581146109ee57600080fd5b604081526000610c1660408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b604081526000610c1660408301600a8152690808080808149a59da1d60b21b60208201526040019056fe608060405234801561001057600080fd5b50610a4d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80635ecd45b91461004657806388409afa14610064578063fc98a5981461008f575b600080fd5b61004e6100a4565b60405161005b91906101f0565b60405180910390f35b61007761007236600461023d565b610106565b6040516001600160a01b03909116815260200161005b565b6100a261009d36600461026c565b610130565b005b606060008054806020026020016040519081016040528092919081815260200182805480156100fc57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116100de575b5050505050905090565b6000818154811061011657600080fd5b6000918252602090912001546001600160a01b0316905081565b60008282604051610140906101e3565b61014b929190610321565b604051809103906000f080158015610167573d6000803e3d6000fd5b50600080546001810182558180527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b0319166001600160a01b038416908117909155604051929350917f0265693c8d95ffd63866cae4d18980d296337fa815a89b42926fc64fda65729c9190a2505050565b6106a18061037783390190565b6020808252825182820181905260009190848201906040850190845b818110156102315783516001600160a01b03168352928401929184019160010161020c565b50909695505050505050565b60006020828403121561024f57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561027f57600080fd5b823567ffffffffffffffff8082111561029757600080fd5b818501915085601f8301126102ab57600080fd5b8135818111156102bd576102bd610256565b604051601f8201601f19908116603f011681019083821181831017156102e5576102e5610256565b816040528281528860208487010111156102fe57600080fd5b826020860160208301376000602093820184015298969091013596505050505050565b604081526000835180604084015260005b8181101561034f5760208187018101516060868401015201610332565b506000606082850101526060601f19601f830116840101915050826020830152939250505056fe60806040526831323331323331323360b81b60005534801561002057600080fd5b506040516106a13803806106a183398101604081905261003f9161006b565b600261004b83826101c5565b5060015550610284565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561007e57600080fd5b82516001600160401b038082111561009557600080fd5b818501915085601f8301126100a957600080fd5b8151818111156100bb576100bb610055565b604051601f8201601f19908116603f011681019083821181831017156100e3576100e3610055565b816040528281526020935088848487010111156100ff57600080fd5b600091505b828210156101215784820184015181830185015290830190610104565b6000928101840192909252509401519395939450505050565b600181811c9082168061014e57607f821691505b60208210810361016e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156101c0576000816000526020600020601f850160051c8101602086101561019d5750805b601f850160051c820191505b818110156101bc578281556001016101a9565b5050505b505050565b81516001600160401b038111156101de576101de610055565b6101f2816101ec845461013a565b84610174565b602080601f831160018114610227576000841561020f5750858301515b600019600386901b1c1916600185901b1785556101bc565b600085815260208120601f198616915b8281101561025657888601518255948401946001909101908401610237565b50858210156102745787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61040e806102936000396000f3fe6080604052600436106100435760003560e01c80633fad9ae0146100ae5780634eee59b3146100d9578063a597201d146100fb578063bfa0b1331461011f5761007e565b3661007e576040514781527f6163bf8b8285097ba88fb3225378b6ecba49a8c21a5ee8fe42de53f0e06ab727906020015b60405180910390a1005b6040514781527f6163bf8b8285097ba88fb3225378b6ecba49a8c21a5ee8fe42de53f0e06ab72790602001610074565b3480156100ba57600080fd5b506100c3610135565b6040516100d091906102c3565b60405180910390f35b3480156100e557600080fd5b506100f96100f4366004610312565b6101c3565b005b34801561010757600080fd5b5061011160015481565b6040519081526020016100d0565b34801561012b57600080fd5b5061011160005481565b6002805461014290610384565b80601f016020809104026020016040519081016040528092919081815260200182805461016e90610384565b80156101bb5780601f10610190576101008083540402835291602001916101bb565b820191906000526020600020905b81548152906001019060200180831161019e57829003601f168201915b505050505081565b60015460005483836040516020016101dd939291906103be565b60405160208183030381529060405280519060200120146101fd57600080fd5b47156102bf576040517f2d98f000c881b01994fb29ae677a074705de44ff8360f0dc3e173c9cfa1eb13690600090a16040516000908190339047908381818185875af1925050503d8060008114610270576040519150601f19603f3d011682016040523d82523d6000602084013e610275565b606091505b5091509150816102bc5760405162461bcd60e51b815260206004820152600e60248201526d11985a5b1959081d1bc81cd95b9960921b604482015260640160405180910390fd5b50505b5050565b60006020808352835180602085015260005b818110156102f1578581018301518582016040015282016102d5565b506000604082860101526040601f19601f8301168501019250505092915050565b6000806020838503121561032557600080fd5b823567ffffffffffffffff8082111561033d57600080fd5b818501915085601f83011261035157600080fd5b81358181111561036057600080fd5b86602082850101111561037257600080fd5b60209290920196919550909350505050565b600181811c9082168061039857607f821691505b6020821081036103b857634e487b7160e01b600052602260045260246000fd5b50919050565b83815281836020830137600091016020019081529291505056fea264697066735822122062cd22ac7d27780a106db73cda6a8e4dc2af1e6659568850fe2425c521536b7464736f6c63430008170033a264697066735822122068051bb11bbbc30ff2a839294f03af8f2eb42dbff5776e22e66ecb7db6d536a464736f6c63430008170033576861742069732074686520616e7377657220746f206c6966652c2074686520756e6976657273652c20616e642065766572797468696e673fa2646970667358221220d9a6bc67276a9debb0768ba4258014260351019e0f8742312d2c93ed5a8cea5664736f6c63430008170033",
    "sourceMap": "159:1194:22:-:0;;;1572:26:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;159:1194:22;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80630a9254e4146100675780631a627e0c1461007157806398d9b0d214610079578063ba414fa614610081578063c45a01551461009e578063fa7626d4146100cf575b600080fd5b61006f6100dc565b005b61006f61012d565b61006f610348565b61008961051e565b60405190151581526020015b60405180910390f35b6000546100b7906201000090046001600160a01b031681565b6040516001600160a01b039091168152602001610095565b6000546100899060ff1681565b6040516100e89061092a565b604051809103906000f080158015610104573d6000803e3d6000fd5b50600060026101000a8154816001600160a01b0302191690836001600160a01b03160217905550565b60006040518060600160405280603981526020016116bc6039913990506000604051806040016040528060028152602001611a1960f11b815250905060006831323331323331323360b81b90506000818360405160200161018f92919061095b565b60408051808303601f19018152908290528051602090910120600054631f9314b360e31b83529092506201000090046001600160a01b03169063fc98a598906101de9087908590600401610981565b600060405180830381600087803b1580156101f857600080fd5b505af115801561020c573d6000803e3d6000fd5b5050600080546040516344204d7d60e11b8152600481018390529193506201000090046001600160a01b031691506388409afa90602401602060405180830381865afa158015610260573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028491906109d3565b9050610341816001600160a01b0316633fad9ae06040518163ffffffff1660e01b8152600401600060405180830381865afa1580156102c7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102ef9190810190610a3c565b6040516020016102ff9190610ad0565b60405160208183030381529060405280519060200120866040516020016103269190610ad0565b60405160208183030381529060405280519060200120610649565b5050505050565b60006040518060600160405280603981526020016116bc6039913990506000604051806040016040528060028152602001611a1960f11b815250905060006831323331323331323360b81b9050600081836040516020016103aa92919061095b565b60408051808303601f19018152908290528051602090910120600054631f9314b360e31b83529092506201000090046001600160a01b03169063fc98a598906103f99087908590600401610981565b600060405180830381600087803b15801561041357600080fd5b505af1158015610427573d6000803e3d6000fd5b5050600054604051631f9314b360e31b8152620100009091046001600160a01b0316925063fc98a59891506104629087908590600401610981565b600060405180830381600087803b15801561047c57600080fd5b505af1158015610490573d6000803e3d6000fd5b5050505060008060029054906101000a90046001600160a01b03166001600160a01b0316635ecd45b96040518163ffffffff1660e01b8152600401600060405180830381865afa1580156104e8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105109190810190610aec565b90506103418151600261073f565b60008054610100900460ff161561053e5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156106445760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916105cc917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610b99565b60408051601f19818403018152908290526105e691610ad0565b6000604051808303816000865af19150503d8060008114610623576040519150601f19603f3d011682016040523d82523d6000602084013e610628565b606091505b50915050808060200190518101906106409190610bca565b9150505b919050565b80821461073b577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516106bd9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974604082015264657333325d60d81b606082015260800190565b60405180910390a17fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f99826040516106f49190610bec565b60405180910390a17fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f998160405161072b9190610c24565b60405180910390a161073b61081e565b5050565b80821461073b577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516107b09060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8826040516107e79190610bec565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405161072b9190610c24565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156109195760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526108b89291602001610b99565b60408051601f19818403018152908290526108d291610ad0565b6000604051808303816000865af19150503d806000811461090f576040519150601f19603f3d011682016040523d82523d6000602084013e610914565b606091505b505050505b6000805461ff001916610100179055565b610a6d80610c4f83390190565b60005b8381101561095257818101518382015260200161093a565b50506000910152565b82815260008251610973816020850160208701610937565b919091016020019392505050565b60408152600083518060408401526109a0816060850160208801610937565b602083019390935250601f91909101601f191601606001919050565b80516001600160a01b038116811461064457600080fd5b6000602082840312156109e557600080fd5b6109ee826109bc565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610a3457610a346109f5565b604052919050565b600060208284031215610a4e57600080fd5b815167ffffffffffffffff80821115610a6657600080fd5b818401915084601f830112610a7a57600080fd5b815181811115610a8c57610a8c6109f5565b610a9f601f8201601f1916602001610a0b565b9150808252856020828501011115610ab657600080fd5b610ac7816020840160208601610937565b50949350505050565b60008251610ae2818460208701610937565b9190910192915050565b60006020808385031215610aff57600080fd5b825167ffffffffffffffff80821115610b1757600080fd5b818501915085601f830112610b2b57600080fd5b815181811115610b3d57610b3d6109f5565b8060051b9150610b4e848301610a0b565b8181529183018401918481019088841115610b6857600080fd5b938501935b83851015610b8d57610b7e856109bc565b82529385019390850190610b6d565b98975050505050505050565b6001600160e01b0319831681528151600090610bbc816004850160208701610937565b919091016004019392505050565b600060208284031215610bdc57600080fd5b815180151581146109ee57600080fd5b604081526000610c1660408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b604081526000610c1660408301600a8152690808080808149a59da1d60b21b60208201526040019056fe608060405234801561001057600080fd5b50610a4d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80635ecd45b91461004657806388409afa14610064578063fc98a5981461008f575b600080fd5b61004e6100a4565b60405161005b91906101f0565b60405180910390f35b61007761007236600461023d565b610106565b6040516001600160a01b03909116815260200161005b565b6100a261009d36600461026c565b610130565b005b606060008054806020026020016040519081016040528092919081815260200182805480156100fc57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116100de575b5050505050905090565b6000818154811061011657600080fd5b6000918252602090912001546001600160a01b0316905081565b60008282604051610140906101e3565b61014b929190610321565b604051809103906000f080158015610167573d6000803e3d6000fd5b50600080546001810182558180527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b0319166001600160a01b038416908117909155604051929350917f0265693c8d95ffd63866cae4d18980d296337fa815a89b42926fc64fda65729c9190a2505050565b6106a18061037783390190565b6020808252825182820181905260009190848201906040850190845b818110156102315783516001600160a01b03168352928401929184019160010161020c565b50909695505050505050565b60006020828403121561024f57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561027f57600080fd5b823567ffffffffffffffff8082111561029757600080fd5b818501915085601f8301126102ab57600080fd5b8135818111156102bd576102bd610256565b604051601f8201601f19908116603f011681019083821181831017156102e5576102e5610256565b816040528281528860208487010111156102fe57600080fd5b826020860160208301376000602093820184015298969091013596505050505050565b604081526000835180604084015260005b8181101561034f5760208187018101516060868401015201610332565b506000606082850101526060601f19601f830116840101915050826020830152939250505056fe60806040526831323331323331323360b81b60005534801561002057600080fd5b506040516106a13803806106a183398101604081905261003f9161006b565b600261004b83826101c5565b5060015550610284565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561007e57600080fd5b82516001600160401b038082111561009557600080fd5b818501915085601f8301126100a957600080fd5b8151818111156100bb576100bb610055565b604051601f8201601f19908116603f011681019083821181831017156100e3576100e3610055565b816040528281526020935088848487010111156100ff57600080fd5b600091505b828210156101215784820184015181830185015290830190610104565b6000928101840192909252509401519395939450505050565b600181811c9082168061014e57607f821691505b60208210810361016e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156101c0576000816000526020600020601f850160051c8101602086101561019d5750805b601f850160051c820191505b818110156101bc578281556001016101a9565b5050505b505050565b81516001600160401b038111156101de576101de610055565b6101f2816101ec845461013a565b84610174565b602080601f831160018114610227576000841561020f5750858301515b600019600386901b1c1916600185901b1785556101bc565b600085815260208120601f198616915b8281101561025657888601518255948401946001909101908401610237565b50858210156102745787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61040e806102936000396000f3fe6080604052600436106100435760003560e01c80633fad9ae0146100ae5780634eee59b3146100d9578063a597201d146100fb578063bfa0b1331461011f5761007e565b3661007e576040514781527f6163bf8b8285097ba88fb3225378b6ecba49a8c21a5ee8fe42de53f0e06ab727906020015b60405180910390a1005b6040514781527f6163bf8b8285097ba88fb3225378b6ecba49a8c21a5ee8fe42de53f0e06ab72790602001610074565b3480156100ba57600080fd5b506100c3610135565b6040516100d091906102c3565b60405180910390f35b3480156100e557600080fd5b506100f96100f4366004610312565b6101c3565b005b34801561010757600080fd5b5061011160015481565b6040519081526020016100d0565b34801561012b57600080fd5b5061011160005481565b6002805461014290610384565b80601f016020809104026020016040519081016040528092919081815260200182805461016e90610384565b80156101bb5780601f10610190576101008083540402835291602001916101bb565b820191906000526020600020905b81548152906001019060200180831161019e57829003601f168201915b505050505081565b60015460005483836040516020016101dd939291906103be565b60405160208183030381529060405280519060200120146101fd57600080fd5b47156102bf576040517f2d98f000c881b01994fb29ae677a074705de44ff8360f0dc3e173c9cfa1eb13690600090a16040516000908190339047908381818185875af1925050503d8060008114610270576040519150601f19603f3d011682016040523d82523d6000602084013e610275565b606091505b5091509150816102bc5760405162461bcd60e51b815260206004820152600e60248201526d11985a5b1959081d1bc81cd95b9960921b604482015260640160405180910390fd5b50505b5050565b60006020808352835180602085015260005b818110156102f1578581018301518582016040015282016102d5565b506000604082860101526040601f19601f8301168501019250505092915050565b6000806020838503121561032557600080fd5b823567ffffffffffffffff8082111561033d57600080fd5b818501915085601f83011261035157600080fd5b81358181111561036057600080fd5b86602082850101111561037257600080fd5b60209290920196919550909350505050565b600181811c9082168061039857607f821691505b6020821081036103b857634e487b7160e01b600052602260045260246000fd5b50919050565b83815281836020830137600091016020019081529291505056fea264697066735822122062cd22ac7d27780a106db73cda6a8e4dc2af1e6659568850fe2425c521536b7464736f6c63430008170033a264697066735822122068051bb11bbbc30ff2a839294f03af8f2eb42dbff5776e22e66ecb7db6d536a464736f6c63430008170033576861742069732074686520616e7377657220746f206c6966652c2074686520756e6976657273652c20616e642065766572797468696e673fa2646970667358221220d9a6bc67276a9debb0768ba4258014260351019e0f8742312d2c93ed5a8cea5664736f6c63430008170033",
    "sourceMap": "159:1194:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;233:68;;;:::i;:::-;;307:535;;;:::i;848:503::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;179:14:24;;172:22;154:41;;142:2;127:18;1819:584:0;;;;;;;;200:26:22;;;;;;;;-1:-1:-1;;;;;200:26:22;;;;;;-1:-1:-1;;;;;391:32:24;;;373:51;;361:2;346:18;200:26:22;206:224:24;1572:26:0;;;;;;;;;233:68:22;277:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;267:7;;:27;;;;;-1:-1:-1;;;;;267:27:22;;;;;-1:-1:-1;;;;;267:27:22;;;;;;233:68::o;307:535::-;350:34;:96;;;;;;;;;;;;;;;;;;;456:20;:27;;;;;;;;;;;;;-1:-1:-1;;;456:27:22;;;;;493:12;-1:-1:-1;;;493:35:22;;538:20;588:4;594:6;571:30;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;571:30:22;;;;;;;561:41;;571:30;561:41;;;;612:7;;-1:-1:-1;;;612:42:22;;561:41;;-1:-1:-1;612:7:22;;;-1:-1:-1;;;;;612:7:22;;:18;;:42;;631:8;;561:41;;612:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;664:13:22;680:7;;:18;;-1:-1:-1;;;680:18:22;;;;;1686:25:24;;;664:13:22;;-1:-1:-1;680:7:22;;;-1:-1:-1;;;;;680:7:22;;-1:-1:-1;680:15:22;;1659:18:24;;680::22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;664:34;;708:127;757:4;-1:-1:-1;;;;;757:13:22;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;757:15:22;;;;;;;;;;;;:::i;:::-;740:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;730:44;;;;;;815:8;798:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;788:37;;;;;;708:8;:127::i;:::-;340:502;;;;;307:535::o;848:503::-;893:34;:96;;;;;;;;;;;;;;;;;;;999:20;:27;;;;;;;;;;;;;-1:-1:-1;;;999:27:22;;;;;1036:12;-1:-1:-1;;;1036:35:22;;1081:20;1131:4;1137:6;1114:30;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;1114:30:22;;;;;;;1104:41;;1114:30;1104:41;;;;1155:7;;-1:-1:-1;;;1155:42:22;;1104:41;;-1:-1:-1;1155:7:22;;;-1:-1:-1;;;;;1155:7:22;;:18;;:42;;1174:8;;1104:41;;1155:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1207:7:22;;:42;;-1:-1:-1;;;1207:42:22;;:7;;;;-1:-1:-1;;;;;1207:7:22;;-1:-1:-1;1207:18:22;;-1:-1:-1;1207:42:22;;1226:8;;1236:12;;1207:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1259:25;1287:7;;;;;;;;;-1:-1:-1;;;;;1287:7:22;-1:-1:-1;;;;;1287:18:22;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1287:20:22;;;;;;;;;;;;:::i;:::-;1259:48;;1317:27;1326:7;:14;1342:1;1317:8;:27::i;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;4752:51:24;;;-1:-1:-1;;;4819:18:24;;;4812:34;2196:43:0;;;;;;;;;4725:18:24;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;4095:277::-;4163:1;4158;:6;4154:212;;4185:44;;;;;6022:2:24;6004:21;;;6061:2;6041:18;;;6034:30;6100:34;6095:2;6080:18;;6073:62;-1:-1:-1;;;6166:2:24;6151:18;;6144:35;6211:3;6196:19;;5820:401;4185:44:0;;;;;;;;4248:34;4280:1;4248:34;;;;;;:::i;:::-;;;;;;;;4301;4333:1;4301:34;;;;;;:::i;:::-;;;;;;;;4349:6;:4;:6::i;:::-;4095:277;;:::o;5209:262::-;5271:1;5266;:6;5262:203;;5293:41;;;;;7462:2:24;7444:21;;;7501:2;7481:18;;;7474:30;7540:34;7535:2;7520:18;;7513:62;-1:-1:-1;;;7606:2:24;7591:18;;7584:32;7648:3;7633:19;;7260:398;5293:41:0;;;;;;;;5353:31;5382:1;5353:31;;;;;;:::i;:::-;;;;;;;;5403;5432:1;5403:31;;;;;;:::i;2409:432::-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;8571:51:24;;;-1:-1:-1;;;8638:18:24;;;8631:34;;;;2712:4:0;8681:18:24;;;8674:34;2489:11:0;;1671:64;2586:43;;8544:18:24;;2652:67:0;;;-1:-1:-1;;2652:67:0;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:0;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:0;2820:7;:14;;-1:-1:-1;;2820:14:0;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;435:250:24:-;520:1;530:113;544:6;541:1;538:13;530:113;;;620:11;;;614:18;601:11;;;594:39;566:2;559:10;530:113;;;-1:-1:-1;;677:1:24;659:16;;652:27;435:250::o;690:361::-;879:6;874:3;867:19;849:3;915:6;909:13;931:73;997:6;992:2;987:3;983:12;978:2;970:6;966:15;931:73;:::i;:::-;1024:16;;;;1042:2;1020:25;;690:361;-1:-1:-1;;;690:361:24:o;1056:471::-;1233:2;1222:9;1215:21;1196:4;1265:6;1259:13;1308:6;1303:2;1292:9;1288:18;1281:34;1324:81;1398:6;1393:2;1382:9;1378:18;1371:4;1363:6;1359:17;1324:81;:::i;:::-;1507:4;1492:20;;1485:36;;;;-1:-1:-1;1466:2:24;1445:15;;;;-1:-1:-1;;1441:29:24;1426:45;1473:2;1422:54;;1056:471;-1:-1:-1;1056:471:24:o;1722:187::-;1811:13;;-1:-1:-1;;;;;1853:31:24;;1843:42;;1833:70;;1899:1;1896;1889:12;1914:236;2002:6;2055:2;2043:9;2034:7;2030:23;2026:32;2023:52;;;2071:1;2068;2061:12;2023:52;2094:50;2134:9;2094:50;:::i;:::-;2084:60;1914:236;-1:-1:-1;;;1914:236:24:o;2155:127::-;2216:10;2211:3;2207:20;2204:1;2197:31;2247:4;2244:1;2237:15;2271:4;2268:1;2261:15;2287:275;2358:2;2352:9;2423:2;2404:13;;-1:-1:-1;;2400:27:24;2388:40;;2458:18;2443:34;;2479:22;;;2440:62;2437:88;;;2505:18;;:::i;:::-;2541:2;2534:22;2287:275;;-1:-1:-1;2287:275:24:o;2567:719::-;2647:6;2700:2;2688:9;2679:7;2675:23;2671:32;2668:52;;;2716:1;2713;2706:12;2668:52;2749:9;2743:16;2778:18;2819:2;2811:6;2808:14;2805:34;;;2835:1;2832;2825:12;2805:34;2873:6;2862:9;2858:22;2848:32;;2918:7;2911:4;2907:2;2903:13;2899:27;2889:55;;2940:1;2937;2930:12;2889:55;2969:2;2963:9;2991:2;2987;2984:10;2981:36;;;2997:18;;:::i;:::-;3039:53;3082:2;3063:13;;-1:-1:-1;;3059:27:24;3088:2;3055:36;3039:53;:::i;:::-;3026:66;;3115:2;3108:5;3101:17;3155:7;3150:2;3145;3141;3137:11;3133:20;3130:33;3127:53;;;3176:1;3173;3166:12;3127:53;3189:67;3253:2;3248;3241:5;3237:14;3232:2;3228;3224:11;3189:67;:::i;:::-;-1:-1:-1;3275:5:24;2567:719;-1:-1:-1;;;;2567:719:24:o;3291:289::-;3422:3;3460:6;3454:13;3476:66;3535:6;3530:3;3523:4;3515:6;3511:17;3476:66;:::i;:::-;3558:16;;;;;3291:289;-1:-1:-1;;3291:289:24:o;3585:988::-;3698:6;3729:2;3772;3760:9;3751:7;3747:23;3743:32;3740:52;;;3788:1;3785;3778:12;3740:52;3821:9;3815:16;3850:18;3891:2;3883:6;3880:14;3877:34;;;3907:1;3904;3897:12;3877:34;3945:6;3934:9;3930:22;3920:32;;3990:7;3983:4;3979:2;3975:13;3971:27;3961:55;;4012:1;4009;4002:12;3961:55;4041:2;4035:9;4063:2;4059;4056:10;4053:36;;;4069:18;;:::i;:::-;4115:2;4112:1;4108:10;4098:20;;4138:28;4162:2;4158;4154:11;4138:28;:::i;:::-;4200:15;;;4270:11;;;4266:20;;;4231:12;;;;4298:19;;;4295:39;;;4330:1;4327;4320:12;4295:39;4354:11;;;;4374:169;4390:6;4385:3;4382:15;4374:169;;;4456:44;4496:3;4456:44;:::i;:::-;4444:57;;4407:12;;;;4521;;;;4374:169;;;4562:5;3585:988;-1:-1:-1;;;;;;;;3585:988:24:o;4857:384::-;-1:-1:-1;;;;;;5042:33:24;;5030:46;;5099:13;;5012:3;;5121:74;5099:13;5184:1;5175:11;;5168:4;5156:17;;5121:74;:::i;:::-;5215:16;;;;5233:1;5211:24;;4857:384;-1:-1:-1;;;4857:384:24:o;5538:277::-;5605:6;5658:2;5646:9;5637:7;5633:23;5629:32;5626:52;;;5674:1;5671;5664:12;5626:52;5706:9;5700:16;5759:5;5752:13;5745:21;5738:5;5735:32;5725:60;;5781:1;5778;5771:12;6390:348;6620:2;6609:9;6602:21;6583:4;6640:49;6685:2;6674:9;6670:18;6303:2;6291:15;;-1:-1:-1;;;6331:4:24;6322:14;;6315:36;6376:2;6367:12;;6226:159;6640:49;6632:57;;6725:6;6720:2;6709:9;6705:18;6698:34;6390:348;;;;:::o;6907:::-;7137:2;7126:9;7119:21;7100:4;7157:49;7202:2;7191:9;7187:18;6820:2;6808:15;;-1:-1:-1;;;6848:4:24;6839:14;;6832:36;6893:2;6884:12;;6743:159",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "factory()": "c45a0155",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testCountQuizzes()": "98d9b0d2",
    "testCreateQuiz()": "1a627e0c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract QuizFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCountQuizzes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCreateQuiz\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/QuizFactory.t.sol\":\"QuizFactoryTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1419991b2a8eb2de79b9bd2b3c5a0ceb5d7636ab9bcddde0b71701fd6ad47273\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7afc962ec6e60e1ff749cd0d4c671bc3b85386c68d26b824d4a6c6e6e8255e85\",\"dweb:/ipfs/QmWwfj6Qk8QBcnGD45seGnDXtUmC9CYKuPNJCApSjLyPSj\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d\",\"dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e\",\"dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32\",\"dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x502b18a4becda6ecd91fa8b419d8034946bfa80e6cc7f6497f51f8565bfadae0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf499ee483a1dfd02023d4ce78ed4029a49794ccd5b849aaab912faea0d2ba61\",\"dweb:/ipfs/QmP6hwNZW7sYbQK9fBzuZWxfLm6Swx2nKzvZ54qWNqQkzX\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x7c6be780decc2c54d0c65990b2f0a66d6d25778a3840a55977344290ef544fce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae80141e1208d1c5a7c3417d79a09aa510c5b6ecaaa08884ca45e42583daed90\",\"dweb:/ipfs/Qmc6MwPwwDC242vwEJWyGhwUbKLKc7ab9hUau2JCmuHrTT\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xd8703f49411737ecf8d411f8fa66b2bf0ef972ba28b7a4adf1748c63df1bf682\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7c10a6b8112f6fe3cdccb6240ecd382765216b1a82e9a86a0fec8f5e09eadd1\",\"dweb:/ipfs/QmdRvPCU4RkjMHsTu3Ric1ZEF1AWDNLp78unFC5aWP17xq\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xa24468244abb66e663fb7eee6463cb518eb9a7c14e1071548ff564cca825bbca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://145585a2194aa6e2d30edfe709ef2814e20b1b4540469aa6a8f50c841fcb9070\",\"dweb:/ipfs/QmZrwbvtpbtTxqbW5phUrwb3F1tBiPSQc6jZJAXBfsBsAh\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/forge-std/src/test.sol\":{\"keccak256\":\"0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765\",\"dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri\"]},\"src/QuizFactory.sol\":{\"keccak256\":\"0xfb4933f1d5d8ba1b4a8dd42942ac32000b04505ed0bf00121476dc6c76820771\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://65d59817583929027fd1360e78059f764a787d57edc7fb786d9fde49fb573b7e\",\"dweb:/ipfs/QmPi1oScvcrfEVPPng4BWYmWr7PvUBqWsHdE8KNBYMbV2C\"]},\"src/QuizGame.sol\":{\"keccak256\":\"0xb656ff46e51705b4d26bd803d6c6c5f1d30ebbfb14fd39de39ed8c266a9bfea7\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://aa2ba5e8b2eb2bf4298214e3594b0f080e6db7adb4b669d1ccc25bd88fd4befb\",\"dweb:/ipfs/QmdHdEsqy9FCAZeFMvLsr3RPfFUHfq5jBs8JkKbHfeLJ5E\"]},\"test/QuizFactory.t.sol\":{\"keccak256\":\"0x22747a5cd583a0121970b08d40bea92f080e5a91fd5ba7807b032097147f8ad0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ab812b10c54a5fbcdf166457707abbdf8dcd6edfe57d4173423211efe253bbc5\",\"dweb:/ipfs/QmV3W8bunTsL8jbkMrWfgrxrd9fh6G6ZdYBU6Ymnc8zkXY\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.23+commit.f704f362"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factory",
          "outputs": [
            {
              "internalType": "contract QuizFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCountQuizzes"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCreateQuiz"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/QuizFactory.t.sol": "QuizFactoryTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x1419991b2a8eb2de79b9bd2b3c5a0ceb5d7636ab9bcddde0b71701fd6ad47273",
        "urls": [
          "bzz-raw://7afc962ec6e60e1ff749cd0d4c671bc3b85386c68d26b824d4a6c6e6e8255e85",
          "dweb:/ipfs/QmWwfj6Qk8QBcnGD45seGnDXtUmC9CYKuPNJCApSjLyPSj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7",
        "urls": [
          "bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2",
          "dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6",
        "urls": [
          "bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d",
          "dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d",
        "urls": [
          "bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e",
          "dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811",
        "urls": [
          "bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32",
          "dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x502b18a4becda6ecd91fa8b419d8034946bfa80e6cc7f6497f51f8565bfadae0",
        "urls": [
          "bzz-raw://bf499ee483a1dfd02023d4ce78ed4029a49794ccd5b849aaab912faea0d2ba61",
          "dweb:/ipfs/QmP6hwNZW7sYbQK9fBzuZWxfLm6Swx2nKzvZ54qWNqQkzX"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x7c6be780decc2c54d0c65990b2f0a66d6d25778a3840a55977344290ef544fce",
        "urls": [
          "bzz-raw://ae80141e1208d1c5a7c3417d79a09aa510c5b6ecaaa08884ca45e42583daed90",
          "dweb:/ipfs/Qmc6MwPwwDC242vwEJWyGhwUbKLKc7ab9hUau2JCmuHrTT"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/mocks/MockERC20.sol": {
        "keccak256": "0xd8703f49411737ecf8d411f8fa66b2bf0ef972ba28b7a4adf1748c63df1bf682",
        "urls": [
          "bzz-raw://b7c10a6b8112f6fe3cdccb6240ecd382765216b1a82e9a86a0fec8f5e09eadd1",
          "dweb:/ipfs/QmdRvPCU4RkjMHsTu3Ric1ZEF1AWDNLp78unFC5aWP17xq"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/mocks/MockERC721.sol": {
        "keccak256": "0xa24468244abb66e663fb7eee6463cb518eb9a7c14e1071548ff564cca825bbca",
        "urls": [
          "bzz-raw://145585a2194aa6e2d30edfe709ef2814e20b1b4540469aa6a8f50c841fcb9070",
          "dweb:/ipfs/QmZrwbvtpbtTxqbW5phUrwb3F1tBiPSQc6jZJAXBfsBsAh"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/test.sol": {
        "keccak256": "0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0",
        "urls": [
          "bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765",
          "dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri"
        ],
        "license": "MIT"
      },
      "src/QuizFactory.sol": {
        "keccak256": "0xfb4933f1d5d8ba1b4a8dd42942ac32000b04505ed0bf00121476dc6c76820771",
        "urls": [
          "bzz-raw://65d59817583929027fd1360e78059f764a787d57edc7fb786d9fde49fb573b7e",
          "dweb:/ipfs/QmPi1oScvcrfEVPPng4BWYmWr7PvUBqWsHdE8KNBYMbV2C"
        ],
        "license": "UNLICENSED"
      },
      "src/QuizGame.sol": {
        "keccak256": "0xb656ff46e51705b4d26bd803d6c6c5f1d30ebbfb14fd39de39ed8c266a9bfea7",
        "urls": [
          "bzz-raw://aa2ba5e8b2eb2bf4298214e3594b0f080e6db7adb4b669d1ccc25bd88fd4befb",
          "dweb:/ipfs/QmdHdEsqy9FCAZeFMvLsr3RPfFUHfq5jBs8JkKbHfeLJ5E"
        ],
        "license": "UNLICENSED"
      },
      "test/QuizFactory.t.sol": {
        "keccak256": "0x22747a5cd583a0121970b08d40bea92f080e5a91fd5ba7807b032097147f8ad0",
        "urls": [
          "bzz-raw://ab812b10c54a5fbcdf166457707abbdf8dcd6edfe57d4173423211efe253bbc5",
          "dweb:/ipfs/QmV3W8bunTsL8jbkMrWfgrxrd9fh6G6ZdYBU6Ymnc8zkXY"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/QuizFactory.t.sol",
    "id": 44869,
    "exportedSymbols": {
      "DSTest": [
        2291
      ],
      "QuizFactory": [
        44614
      ],
      "QuizFactoryTest": [
        44868
      ],
      "QuizGame": [
        44727
      ],
      "StdAssertions": [
        3784
      ],
      "StdChains": [
        4548
      ],
      "StdCheats": [
        7401
      ],
      "StdInvariant": [
        7726
      ],
      "StdStorage": [
        8492
      ],
      "StdStyle": [
        11342
      ],
      "StdUtils": [
        12128
      ],
      "Test": [
        44559
      ],
      "TestBase": [
        2357
      ],
      "Vm": [
        13979
      ],
      "console": [
        22043
      ],
      "console2": [
        30168
      ],
      "safeconsole": [
        44508
      ],
      "stdError": [
        7467
      ],
      "stdJson": [
        8318
      ],
      "stdMath": [
        8460
      ],
      "stdStorage": [
        10131
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1315:22",
    "nodes": [
      {
        "id": 44729,
        "nodeType": "PragmaDirective",
        "src": "39:24:22",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 44730,
        "nodeType": "ImportDirective",
        "src": "65:28:22",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/test.sol",
        "file": "forge-std/test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44869,
        "sourceUnit": 44560,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44731,
        "nodeType": "ImportDirective",
        "src": "95:29:22",
        "nodes": [],
        "absolutePath": "src/QuizGame.sol",
        "file": "../src/QuizGame.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44869,
        "sourceUnit": 44728,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44732,
        "nodeType": "ImportDirective",
        "src": "125:32:22",
        "nodes": [],
        "absolutePath": "src/QuizFactory.sol",
        "file": "../src/QuizFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44869,
        "sourceUnit": 44615,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44868,
        "nodeType": "ContractDefinition",
        "src": "159:1194:22",
        "nodes": [
          {
            "id": 44737,
            "nodeType": "VariableDeclaration",
            "src": "200:26:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "c45a0155",
            "mutability": "mutable",
            "name": "factory",
            "nameLocation": "219:7:22",
            "scope": 44868,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_QuizFactory_$44614",
              "typeString": "contract QuizFactory"
            },
            "typeName": {
              "id": 44736,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44735,
                "name": "QuizFactory",
                "nameLocations": [
                  "200:11:22"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44614,
                "src": "200:11:22"
              },
              "referencedDeclaration": 44614,
              "src": "200:11:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_QuizFactory_$44614",
                "typeString": "contract QuizFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 44748,
            "nodeType": "FunctionDefinition",
            "src": "233:68:22",
            "nodes": [],
            "body": {
              "id": 44747,
              "nodeType": "Block",
              "src": "257:44:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 44745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44740,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44737,
                      "src": "267:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuizFactory_$44614",
                        "typeString": "contract QuizFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 44743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "277:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_QuizFactory_$44614_$",
                          "typeString": "function () returns (contract QuizFactory)"
                        },
                        "typeName": {
                          "id": 44742,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 44741,
                            "name": "QuizFactory",
                            "nameLocations": [
                              "281:11:22"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 44614,
                            "src": "281:11:22"
                          },
                          "referencedDeclaration": 44614,
                          "src": "281:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuizFactory_$44614",
                            "typeString": "contract QuizFactory"
                          }
                        }
                      },
                      "id": 44744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "277:17:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuizFactory_$44614",
                        "typeString": "contract QuizFactory"
                      }
                    },
                    "src": "267:27:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_QuizFactory_$44614",
                      "typeString": "contract QuizFactory"
                    }
                  },
                  "id": 44746,
                  "nodeType": "ExpressionStatement",
                  "src": "267:27:22"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "242:5:22",
            "parameters": {
              "id": 44738,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "247:2:22"
            },
            "returnParameters": {
              "id": 44739,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "257:0:22"
            },
            "scope": 44868,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44809,
            "nodeType": "FunctionDefinition",
            "src": "307:535:22",
            "nodes": [],
            "body": {
              "id": 44808,
              "nodeType": "Block",
              "src": "340:502:22",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    44752
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44752,
                      "mutability": "mutable",
                      "name": "question",
                      "nameLocation": "376:8:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 44808,
                      "src": "350:34:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 44751,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "350:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44754,
                  "initialValue": {
                    "hexValue": "576861742069732074686520616e7377657220746f206c6966652c2074686520756e6976657273652c20616e642065766572797468696e673f",
                    "id": 44753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "387:59:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e2267ccdd4a0fe6eb8de02e9c20f9cc8524fc03882f49376261fc942701f994a",
                      "typeString": "literal_string \"What is the answer to life, the universe, and everything?\""
                    },
                    "value": "What is the answer to life, the universe, and everything?"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "350:96:22"
                },
                {
                  "assignments": [
                    44756
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44756,
                      "mutability": "mutable",
                      "name": "answer",
                      "nameLocation": "470:6:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 44808,
                      "src": "456:20:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 44755,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "456:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44758,
                  "initialValue": {
                    "hexValue": "3432",
                    "id": 44757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "479:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ccb1f717aa77602faf03a594761a36956b1c4cf44c6b336d1db57da799b331b8",
                      "typeString": "literal_string \"42\""
                    },
                    "value": "42"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "456:27:22"
                },
                {
                  "assignments": [
                    44760
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44760,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "501:4:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 44808,
                      "src": "493:12:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 44759,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "493:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44765,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "313233313233313233",
                        "id": 44763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "516:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_250f78769f22a8c43a2b767fde4b093fbbcdc28bd7ecac4bad883a4b0fcf30e3",
                          "typeString": "literal_string \"123123123\""
                        },
                        "value": "123123123"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_250f78769f22a8c43a2b767fde4b093fbbcdc28bd7ecac4bad883a4b0fcf30e3",
                          "typeString": "literal_string \"123123123\""
                        }
                      ],
                      "id": 44762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "508:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 44761,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "508:7:22",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 44764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "508:20:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "493:35:22"
                },
                {
                  "assignments": [
                    44767
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44767,
                      "mutability": "mutable",
                      "name": "hashedAnswer",
                      "nameLocation": "546:12:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 44808,
                      "src": "538:20:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 44766,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "538:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44775,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44771,
                            "name": "salt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44760,
                            "src": "588:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 44772,
                            "name": "answer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44756,
                            "src": "594:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 44769,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "571:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 44770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "575:12:22",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "571:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 44773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "571:30:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 44768,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "561:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 44774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "561:41:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "538:64:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44779,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44752,
                        "src": "631:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 44780,
                        "name": "hashedAnswer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44767,
                        "src": "641:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 44776,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44737,
                        "src": "612:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_QuizFactory_$44614",
                          "typeString": "contract QuizFactory"
                        }
                      },
                      "id": 44778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "620:10:22",
                      "memberName": "createQuiz",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44603,
                      "src": "612:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (string memory,bytes32) external"
                      }
                    },
                    "id": 44781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "612:42:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44782,
                  "nodeType": "ExpressionStatement",
                  "src": "612:42:22"
                },
                {
                  "assignments": [
                    44785
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44785,
                      "mutability": "mutable",
                      "name": "quiz",
                      "nameLocation": "673:4:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 44808,
                      "src": "664:13:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_QuizGame_$44727",
                        "typeString": "contract QuizGame"
                      },
                      "typeName": {
                        "id": 44784,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 44783,
                          "name": "QuizGame",
                          "nameLocations": [
                            "664:8:22"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 44727,
                          "src": "664:8:22"
                        },
                        "referencedDeclaration": 44727,
                        "src": "664:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_QuizGame_$44727",
                          "typeString": "contract QuizGame"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44790,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 44788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "696:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 44786,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44737,
                        "src": "680:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_QuizFactory_$44614",
                          "typeString": "contract QuizFactory"
                        }
                      },
                      "id": 44787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "688:7:22",
                      "memberName": "quizzes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44566,
                      "src": "680:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_QuizGame_$44727_$",
                        "typeString": "function (uint256) view external returns (contract QuizGame)"
                      }
                    },
                    "id": 44789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "680:18:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_QuizGame_$44727",
                      "typeString": "contract QuizGame"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "664:34:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 44795,
                                    "name": "quiz",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 44785,
                                    "src": "757:4:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_QuizGame_$44727",
                                      "typeString": "contract QuizGame"
                                    }
                                  },
                                  "id": 44796,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "762:8:22",
                                  "memberName": "question",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 44626,
                                  "src": "757:13:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                    "typeString": "function () view external returns (string memory)"
                                  }
                                },
                                "id": 44797,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "757:15:22",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "expression": {
                                "id": 44793,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "740:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 44794,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "744:12:22",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "740:16:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 44798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "740:33:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 44792,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "730:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 44799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "730:44:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 44803,
                                "name": "question",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44752,
                                "src": "815:8:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "expression": {
                                "id": 44801,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "798:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 44802,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "802:12:22",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "798:16:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 44804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "798:26:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 44800,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "788:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 44805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "788:37:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 44791,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 375,
                      "src": "708:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 44806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "708:127:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44807,
                  "nodeType": "ExpressionStatement",
                  "src": "708:127:22"
                }
              ]
            },
            "functionSelector": "1a627e0c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCreateQuiz",
            "nameLocation": "316:14:22",
            "parameters": {
              "id": 44749,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "330:2:22"
            },
            "returnParameters": {
              "id": 44750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "340:0:22"
            },
            "scope": 44868,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44867,
            "nodeType": "FunctionDefinition",
            "src": "848:503:22",
            "nodes": [],
            "body": {
              "id": 44866,
              "nodeType": "Block",
              "src": "883:468:22",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    44813
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44813,
                      "mutability": "mutable",
                      "name": "question",
                      "nameLocation": "919:8:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 44866,
                      "src": "893:34:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 44812,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "893:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44815,
                  "initialValue": {
                    "hexValue": "576861742069732074686520616e7377657220746f206c6966652c2074686520756e6976657273652c20616e642065766572797468696e673f",
                    "id": 44814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "930:59:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e2267ccdd4a0fe6eb8de02e9c20f9cc8524fc03882f49376261fc942701f994a",
                      "typeString": "literal_string \"What is the answer to life, the universe, and everything?\""
                    },
                    "value": "What is the answer to life, the universe, and everything?"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "893:96:22"
                },
                {
                  "assignments": [
                    44817
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44817,
                      "mutability": "mutable",
                      "name": "answer",
                      "nameLocation": "1013:6:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 44866,
                      "src": "999:20:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 44816,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "999:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44819,
                  "initialValue": {
                    "hexValue": "3432",
                    "id": 44818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1022:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ccb1f717aa77602faf03a594761a36956b1c4cf44c6b336d1db57da799b331b8",
                      "typeString": "literal_string \"42\""
                    },
                    "value": "42"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "999:27:22"
                },
                {
                  "assignments": [
                    44821
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44821,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1044:4:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 44866,
                      "src": "1036:12:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 44820,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1036:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44826,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "313233313233313233",
                        "id": 44824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1059:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_250f78769f22a8c43a2b767fde4b093fbbcdc28bd7ecac4bad883a4b0fcf30e3",
                          "typeString": "literal_string \"123123123\""
                        },
                        "value": "123123123"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_250f78769f22a8c43a2b767fde4b093fbbcdc28bd7ecac4bad883a4b0fcf30e3",
                          "typeString": "literal_string \"123123123\""
                        }
                      ],
                      "id": 44823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1051:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 44822,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1051:7:22",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 44825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1051:20:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1036:35:22"
                },
                {
                  "assignments": [
                    44828
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44828,
                      "mutability": "mutable",
                      "name": "hashedAnswer",
                      "nameLocation": "1089:12:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 44866,
                      "src": "1081:20:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 44827,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1081:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44836,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44832,
                            "name": "salt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44821,
                            "src": "1131:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 44833,
                            "name": "answer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44817,
                            "src": "1137:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 44830,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1114:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 44831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1118:12:22",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1114:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 44834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1114:30:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 44829,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1104:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 44835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1104:41:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1081:64:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44840,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44813,
                        "src": "1174:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 44841,
                        "name": "hashedAnswer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44828,
                        "src": "1184:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 44837,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44737,
                        "src": "1155:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_QuizFactory_$44614",
                          "typeString": "contract QuizFactory"
                        }
                      },
                      "id": 44839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1163:10:22",
                      "memberName": "createQuiz",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44603,
                      "src": "1155:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (string memory,bytes32) external"
                      }
                    },
                    "id": 44842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1155:42:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44843,
                  "nodeType": "ExpressionStatement",
                  "src": "1155:42:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44847,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44813,
                        "src": "1226:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 44848,
                        "name": "hashedAnswer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44828,
                        "src": "1236:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 44844,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44737,
                        "src": "1207:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_QuizFactory_$44614",
                          "typeString": "contract QuizFactory"
                        }
                      },
                      "id": 44846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1215:10:22",
                      "memberName": "createQuiz",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44603,
                      "src": "1207:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (string memory,bytes32) external"
                      }
                    },
                    "id": 44849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1207:42:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44850,
                  "nodeType": "ExpressionStatement",
                  "src": "1207:42:22"
                },
                {
                  "assignments": [
                    44855
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44855,
                      "mutability": "mutable",
                      "name": "quizzes",
                      "nameLocation": "1277:7:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 44866,
                      "src": "1259:25:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_QuizGame_$44727_$dyn_memory_ptr",
                        "typeString": "contract QuizGame[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 44853,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 44852,
                            "name": "QuizGame",
                            "nameLocations": [
                              "1259:8:22"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 44727,
                            "src": "1259:8:22"
                          },
                          "referencedDeclaration": 44727,
                          "src": "1259:8:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_QuizGame_$44727",
                            "typeString": "contract QuizGame"
                          }
                        },
                        "id": 44854,
                        "nodeType": "ArrayTypeName",
                        "src": "1259:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_QuizGame_$44727_$dyn_storage_ptr",
                          "typeString": "contract QuizGame[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44859,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 44856,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44737,
                        "src": "1287:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_QuizFactory_$44614",
                          "typeString": "contract QuizFactory"
                        }
                      },
                      "id": 44857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1295:10:22",
                      "memberName": "getQuizzes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44613,
                      "src": "1287:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_contract$_QuizGame_$44727_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (contract QuizGame[] memory)"
                      }
                    },
                    "id": 44858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1287:20:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_QuizGame_$44727_$dyn_memory_ptr",
                      "typeString": "contract QuizGame[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1259:48:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 44861,
                          "name": "quizzes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44855,
                          "src": "1326:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_QuizGame_$44727_$dyn_memory_ptr",
                            "typeString": "contract QuizGame[] memory"
                          }
                        },
                        "id": 44862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1334:6:22",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1326:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 44863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1342:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 44860,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "1317:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1317:27:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44865,
                  "nodeType": "ExpressionStatement",
                  "src": "1317:27:22"
                }
              ]
            },
            "functionSelector": "98d9b0d2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCountQuizzes",
            "nameLocation": "857:16:22",
            "parameters": {
              "id": 44810,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "873:2:22"
            },
            "returnParameters": {
              "id": 44811,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "883:0:22"
            },
            "scope": 44868,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 44733,
              "name": "DSTest",
              "nameLocations": [
                "187:6:22"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2291,
              "src": "187:6:22"
            },
            "id": 44734,
            "nodeType": "InheritanceSpecifier",
            "src": "187:6:22"
          }
        ],
        "canonicalName": "QuizFactoryTest",
        "contractDependencies": [
          44614
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          44868,
          2291
        ],
        "name": "QuizFactoryTest",
        "nameLocation": "168:15:22",
        "scope": 44869,
        "usedErrors": [],
        "usedEvents": [
          5,
          9,
          13,
          17,
          21,
          25,
          29,
          33,
          39,
          45,
          53,
          61,
          67,
          73,
          79,
          85
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 22
}